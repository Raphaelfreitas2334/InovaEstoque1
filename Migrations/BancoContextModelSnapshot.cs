// <auto-generated />
using System;
using ControleDeContatos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.AlimentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDevolve")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRetira")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Fornecedorid")
                        .HasColumnType("int");

                    b.Property<int?>("IDusuario")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioDevolvel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioEditou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioRetirou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataVencimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeAlimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obsDeDevolucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obsDeSaida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("quantidadeAtual")
                        .HasColumnType("float");

                    b.Property<double?>("quantidadeMaxima")
                        .HasColumnType("float");

                    b.Property<double?>("quantidadeMinima")
                        .HasColumnType("float");

                    b.Property<double>("quantidadeRetirada")
                        .HasColumnType("float");

                    b.Property<string>("unidadeMedida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Fornecedorid");

                    b.HasIndex("usuarioId");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("WebApplication1.Models.FornecedorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("WebApplication1.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("WebApplication1.Models.AlimentoModel", b =>
                {
                    b.HasOne("WebApplication1.Models.FornecedorModel", "Fornecedor")
                        .WithMany("alimento")
                        .HasForeignKey("Fornecedorid");

                    b.HasOne("WebApplication1.Models.UsuarioModel", "usuario")
                        .WithMany("Alimento")
                        .HasForeignKey("usuarioId");

                    b.Navigation("Fornecedor");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("WebApplication1.Models.FornecedorModel", b =>
                {
                    b.Navigation("alimento");
                });

            modelBuilder.Entity("WebApplication1.Models.UsuarioModel", b =>
                {
                    b.Navigation("Alimento");
                });
#pragma warning restore 612, 618
        }
    }
}
