@model List<AlimentoModel>
@{
    ViewData["Title"] = "Listagem de Alimentos perto de vencer";
}


<link rel="stylesheet" href="~/css/AlimentoCSS/indexAlimento.css" />

@await Component.InvokeAsync("ImprimirVencendo")

<section>
    <table class="table table-striped table-hover table-Vencendo" id="table-Vencendo">
        <thead class="thead-custom">
            <tr>
                <th id="codigo">#</th>
                <th scope="col">Descrição</th>
                <th scope="col">Vencimento</th>
                <th scope="col">Dias para vencer</th>
                <th scope="col">Status</th>
                <th scope="col">Unidade de medida</th>
                <th scope="col">Quantidade atual</th>
                <th scope="col">Quantidade Mínima</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (AlimentoModel alimento in Model)
                {
                    DateTime data1 = DateTime.Today; // primeira data
                    DateTime data2 = DateTime.Parse(alimento.dataVencimento); // segunda data

                    TimeSpan diferenca = data1 - data2; // obtém a diferença entre as datas

                    <tr>
                        @if (diferenca.TotalDays >= 1) // verifica se já venceu
                        {
                            <td>@alimento.Id</td>
                            <td>@alimento.nomeAlimento</td>
                            <td>@alimento.dataVencimento</td>
                            <td>Há @Math.Abs(diferenca.Days) dias</td>
                            <td><span class="badge badge-danger rounded-pill d-inline text-black">Venceu</span></td>
                            <td>@alimento.unidadeMedida</td>
                            <td>@alimento.quantidadeAtual</td>
                            <td>@alimento.quantidadeMinima</td>
                        }
                        else if (diferenca.TotalDays >= 0) // verifica se vence hoje
                        {
                            <td>@alimento.Id</td>
                            <td>@alimento.nomeAlimento</td>
                            <td>@alimento.dataVencimento</td>
                            <td>Vence hoje</td>
                            <td><span class="badge badge-danger rounded-pill d-inline text-black">Venceu</span></td>
                            <td>@alimento.unidadeMedida</td>
                            <td>@alimento.quantidadeAtual</td>
                            <td>@alimento.quantidadeMinima</td>
                        }
                        else if (diferenca.TotalDays <= 0 && diferenca.TotalDays >= -10) // verifica se está para vencer nos próximos 10 dias
                        {
                            <td>@alimento.Id</td>
                            <td>@alimento.nomeAlimento</td>
                            <td>@alimento.dataVencimento</td>
                            <td>Faltam @Math.Abs(diferenca.Days) dias</td>
                            <td><span class="badge badge-warning rounded-pill d-inline text-black">Vencendo</span></td>
                            <td>@alimento.unidadeMedida</td>
                            <td>@alimento.quantidadeAtual</td>
                            <td>@alimento.quantidadeMinima</td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</section>

<style>
    .thead-custom {
        background-color: #000028;
        color: white;
    }
</style>

<script>
    function fecharMensagem() {

        let msg = document.getElementById("AlertOfSucess");
        msg.style.display = 'none';
    }
</script>